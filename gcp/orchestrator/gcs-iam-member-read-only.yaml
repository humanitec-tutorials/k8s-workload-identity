# This Resource Definition uses the Terraform Driver to create IAM policy for gcs resources of the class "read-only"
apiVersion: entity.humanitec.io/v1b1
kind: Definition
metadata:
  id: wi-gcp-gcs-iam-member-read-only
entity:
  driver_type: humanitec/terraform
  name: wi-gcp-gcs-iam-member-read-only
  type: gcp-iam-policy-binding
  # Obtain the Cloud Account from a config resource
  driver_account: ${resources['config.default#app-config'].account}
  driver_inputs:
    values:
      variables:
        # Obtain the bucket name from the bucket resource this resource depends on
        gcs_bucket_name: ${resources['gcs.read-only'].outputs.name}
        # This resource selector traverses the Graph via gcs and workload to read the principal output from all k8s-service-account resources
        principals: ${resources['gcs.read-only<workload>k8s-service-account'].outputs.principal}
      credentials_config:
        variables:
          access_token: access_token
      files:
        providers.tf: |
          terraform {
            required_providers {
              google = {
                source  = "hashicorp/google"
              }
            }
          }
        variables.tf: |
          variable "access_token" {
            type      = string
            sensitive = true
          }
          variable "gcs_bucket_name" {}

          # This variable is a set because a resource selector, which is used
          # to retrieve it, always returns an array
          variable "principals" {
            type = set(string)
          }
        main.tf: |
          provider "google" {
            access_token = var.access_token
          }

          # Create one IAM member for each principal 
          resource "google_storage_bucket_iam_member" "iam_member" {
            for_each = var.principals

            bucket  = var.gcs_bucket_name
            role    = "roles/storage.objectViewer"
            member  = each.key
          }
        outputs.tf: |
          # This output is for debugging and illustration purposes only
          output "principals" {
            value = join(",", var.principals)
          }   
  # Match the class that is used in the "provision" statement in the gcs Resource Definition
  criteria:
    - class: gcs-read-only