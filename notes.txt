

TODO - is there no "Default" class anymore?
  - there could be - TODO test this
  - because moving from a previously not-shared Resource to a shared resource will result in the re-creation of the resource due to a different Resource ID
  - Tip: register and enforce classes in your Org
  - Note: a resource is only the _same_ resource with same type, class, and ID
  - The class "concrete" must not be used in Score files - can we prevent this?

TODO - so specifying an ID is mandatory?
  - technically no - the pattern works for private resources as well
  - but: changing an Active Resource from private to shared, or vice versa, will result in the destruction and re-creation of the resource

TODO - reassess which config parameter is best placed in what config

TODO - Shared Resources need to be referenced in Score so that a depencency from the workload to them is created.
Without that, the Delegator pattern breaks.
Is this exepected behaviour? -> https://humanitec.slack.com/archives/C03LPCM0RLY/p1738576172842719 -> yes

TODO - some (?) gcp-iam-policy-binding resources in the Graph do not have an Active Resource:
- not returned via humctl resources active-resource-usage --app workload-identity-test-gcp --env development
- no data shown when selecting the resource in the Graph
- BUT: there is a Resource object on the cluster showing READY: true and STATUS: ResourceProvisioned, and the permissions are all created correctly in Google Cloud 

## Setup steps

humctl apply -f .-/gcp/orchestrator/

Match a GKE cluster to Application [name]
Enable Workload Identity on cluster

## Notes

For the Resource Types covered by the Delegator pattern, can I still request private instances?
-> yes, just do not specify an "id" in Score
The resource will still get a Delegator resource co-provisioning the policy.
Note: when using a private resource, a later switch to a Shared Resource by adding an "id" will result in the destruction and re-creation of the real-world resource because this will be a different Active Resource in the Graph.
TODO - do we want to disallow this? The ResDef could check if the Resource ID is "shared."

## GCP

The identity used in the `driver_account` in the `gcs` Res Def needs permissions to manage Cloud Storage buckets (e.g. Storage Admin) and Spanner instances (e.g. Cloud Spanner Admin).

Test bucket access, and Google cloud permissions in general:
https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity#verify

## Resource Graph:
https://mermaid.live/edit#pako:eNq1V11v2jAU_SuWnzYJp8UOFKKp0qS-bQ_TeJsiVca-QERiR07SlbX973PDVxJCPgp9QCLmXPv43nvuCS9YaAnYw0vD4xX6-dtXCP3VZh1qLsnwi4-PD9_m5uY-3cTgHRD5kgh5knhIwoJnYZovBdJDkZZZCImzgjDUZCliMvTxV0QIuX-VEIOSCdLqtXAaiU3wxFMg80ysIbULEkJY8lQbYsAitAo3ltKvLQztYehhD0ML-zlAERcCkqTAeymSIuUDsom0A88pGMXDxKnys_cp56vTDdB7BgwswICy_JozcIgiQithIIW6BOx_O3_VEuLDN411GIhNA8t3cjkmr8QJz8bSxCTgEdkdMQ-UDNSyeAV7I3KFiiHi5PlPdGYEoMQWSNj6vKL1JHlMwDwFAh4tPZ2p9HFYru9J6WpjbBJ-TGZotl3_vl1GRf3YMLILI7uw_lLqVJCcsdAWoZ-CJNAKJJpv0E2-9wUy9FXh-GTFDcgjnssoUJ1PrkYfT8v3OalAZX60hNtizHLEuXGxJds2KnLUoSDbM52KOlqYnDRPFV9QeJXyBwRez7GpYmXxVimczVMX3balr68oz16FFlu_r9Dbd_xQS9N6AfVp67NblLahRb-mF_s1rfXrDsROGphe0aLLzUNrtUc7-W415qz-6OX6o036o-cMtErjE_zzlGYv3dByA27bpc0hab1D0ms65D7hJX6sk4GzenrsmvRYcz9c4qC00UFZcUawi2cE6zkj6j2ZXt2T2-dCF08-zoS2WjXr9tO8s7deGR7gCEzEA2n_9b3kCsHpCiLwsWe_Sm7WPvbVm8XxLNWzjRLYS00GA2x0tlxhb2FfrO1TFkv7kvgQcPvXMTqsxlz90Trah9hH7L3gZ-y5zLmljLmjqXtHx6MxHQ3wBnvkznWm7ohNx679lU0n7tsA_8t3GDrUvZ2Oh2w8nQ5ddjd5-w9MiSlc

## Secondary resource type

- Redis
  - Not a suitable use case, does not have Resource level roles.
  - Memorystore doesn’t have the ACL feature of Redis enabled (see https://cloud.google.com/memorystore/docs/redis/product-constraints)  so you cannot have “different levels of access”. It’s either “can reach” (network / firewall level - best achieved with tagging & service account) and “knows secret” (it’s the same PW string for the WHOLE INSTANCE) or staying outside of the door.
- Spanner ✅

### Azure

- Redis
  - Access control with IAM: ✅https://learn.microsoft.com/en-us/azure/azure-cache-for-redis/managed-redis/managed-redis-entra-for-authentication
  - Network access from AKS: Public or private endpoint: https://learn.microsoft.com/en-us/azure/azure-cache-for-redis/quickstart-create-managed-redis#:~:text=Select%20Next%3A%20Networking%20and%20select%20either%20a%20public%20or%20private%20endpoint.

### AWS

- Redis:
  - Access control with IAM: ✅https://docs.aws.amazon.com/AmazonElastiCache/latest/dg/security_iam_service-with-iam.html
  - Network access from EKS:
    - https://docs.aws.amazon.com/AmazonElastiCache/latest/dg/GettingStarted.serverless.step2.html
    - https://stackoverflow.com/questions/62671262/accessing-elasticache-from-eks-cluster
